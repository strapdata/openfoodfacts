version: "3.5"

networks:
  traefik-net:
    external: true

services:
  meetup:
    image: strapdata/openfoodfacts:0.1
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        traefik.backend: meetup
        traefik.frontend.rule: "Host:meetup.903403a9-617f-47ac-933e-537a73091e54.azure.strapcloud.com"
        traefik.docker.network: traefik-net
        traefik.port: 5000
    networks:
      - traefik-net
    volumes:
      - type: bind
        source: /etc/docker-context.sh
        target: /etc/profile.d/docker-context.sh
        read_only: true
      - type: bind
        source: /home/centos/.cassandra/cqlshrc
        target: /root/.cassandra/cqlshrc
        read_only: true
      - type: bind
        source: /etc/cassandra/cacert.pem
        target: /cacert.pem
        read_only: true
    environment:
      ELASSANDRA_CERTFILE: "/cacert.pem"
      ELASSANDRA_LOAD_CQLSHRC: "true"
      ELASSANDRA_RF: "2"
      ELASSANDRA_KEYSPACE: "meetup2"
      DEBUG: "true"

  # this is for swarm visualisation : visit http://machine-ip:8080
  viz:
    image: dockersamples/visualizer
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - traefik-net
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        traefik.backend: viz
        traefik.frontend.rule: "Host:viz.903403a9-617f-47ac-933e-537a73091e54.azure.strapcloud.com"
        traefik.docker.network: traefik-net
        traefik.port: 8080